{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tweener/my-babycare-app/pages/baby/%5BbabyId%5D.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { db } from \"../../lib/firebase\";\nimport {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  query,\n  setDoc,\n  deleteDoc,\n  where,\n} from \"firebase/firestore\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { format, startOfWeek, addDays } from \"date-fns\";\nimport { ko } from \"date-fns/locale\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function BabyPage() {\n  const router = useRouter();\n  const { babyId } = router.query;\n  const { t, i18n } = useTranslation();\n\n  const [babyData, setBabyData] = useState<any>(null);\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n  const [selectedHour, setSelectedHour] = useState<number>(12);\n  const [selectedMinute, setSelectedMinute] = useState<number>(0);\n  const [selectedType, setSelectedType] = useState<string>(\"분유\");\n  const [amount, setAmount] = useState<string>(\"\");\n\n  const [records, setRecords] = useState<any[]>([]);\n  const [weekStartDate, setWeekStartDate] = useState<Date>(\n    startOfWeek(new Date(), { weekStartsOn: 0 })\n  );\n  const [activeTab, setActiveTab] = useState<\"input\" | \"output\">(\"input\");\n  const [saveMessage, setSaveMessage] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchBaby = async () => {\n      if (!babyId) return;\n      const docRef = doc(db, \"babies\", babyId as string);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        setBabyData(docSnap.data());\n      }\n    };\n    fetchBaby();\n  }, [babyId]);\n\n  const fetchRecords = async () => {\n    if (!babyId || !weekStartDate) return;\n    const start = new Date(weekStartDate);\n    const end = addDays(start, 6);\n    const q = query(\n      collection(db, \"records\"),\n      where(\"babyId\", \"==\", babyId),\n      where(\"date\", \">=\", format(start, \"yyyy-MM-dd\")),\n      where(\"date\", \"<=\", format(end, \"yyyy-MM-dd\"))\n    );\n    const snapshot = await getDocs(q);\n    const result: any[] = [];\n    snapshot.forEach((doc) => result.push({ id: doc.id, ...doc.data() }));\n    setRecords(result);\n  };\n\n  useEffect(() => {\n    fetchRecords();\n  }, [babyId, weekStartDate]);\n\n  const handleSave = async () => {\n    if (!babyId || !selectedDate || !selectedType) return;\n    if ((selectedType === \"분유\" || selectedType === \"모유\") && !amount) return;\n\n    const dateStr = format(selectedDate, \"yyyy-MM-dd\");\n    const timeStr = `${String(selectedHour).padStart(2, \"0\")}:${String(selectedMinute).padStart(2, \"0\")}`;\n    const recordId = `${babyId}-${dateStr}-${timeStr}-${selectedType}`;\n\n    await setDoc(doc(db, \"records\", recordId), {\n      babyId,\n      date: dateStr,\n      hour: selectedHour,\n      minute: selectedMinute,\n      type: selectedType,\n      value: selectedType === \"분유\" || selectedType === \"모유\" ? Number(amount) : 1,\n      timestamp: new Date(),\n    });\n\n    setAmount(\"\");\n    setSaveMessage(t(\"saved\"));\n    setTimeout(() => setSaveMessage(null), 3000);\n    await fetchRecords();\n  };\n\n  const handleDelete = async (recordId: string) => {\n    await deleteDoc(doc(db, \"records\", recordId));\n    await fetchRecords();\n  };\n\n  const handleEdit = async (recordId: string, newValue: string) => {\n    await setDoc(doc(db, \"records\", recordId), { value: Number(newValue) }, { merge: true });\n    await fetchRecords();\n  };\n\n  const getWeekDays = (date: Date) =>\n    Array.from({ length: 7 }, (_, i) => addDays(startOfWeek(date, { weekStartsOn: 0 }), i));\n\n  const handleTabChange = (tab: \"input\" | \"output\") => setActiveTab(tab);\n\n  const changeLanguage = (lng: string) => i18n.changeLanguage(lng);\n\n  const days = getWeekDays(weekStartDate);\n  const hours = Array.from({ length: 24 }, (_, i) => i);\n  const minutes = [0, 15, 30, 45];\n\n  const getSummary = (day: Date) => {\n    const dateStr = format(day, \"yyyy-MM-dd\");\n    const dayRecords = records.filter((r) => r.date === dateStr);\n\n    const milkTotal = dayRecords.filter((r) => r.type === \"분유\").reduce((acc, r) => acc + Number(r.value || 0), 0);\n    const breastTime = dayRecords.filter((r) => r.type === \"모유\").reduce((acc, r) => acc + Number(r.value || 0), 0);\n    const peeCount = dayRecords.filter((r) => r.type === \"소변\").length;\n    const poopCount = dayRecords.filter((r) => r.type === \"대변\").length;\n\n    return { milkTotal, breastTime, totalMilk: milkTotal + breastTime * 3, peeCount, poopCount };\n  };\n\n  return (\n    <div style={{ padding: \"1rem\", backgroundColor: \"#fff\", color: \"#000\", minHeight: \"100vh\" }}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: \"1rem\" }}>\n        <button onClick={() => router.push(\"/\")} style={{ fontWeight: \"bold\", color: \"#333\" }}>🏠 {t(\"home\")}</button>\n        <div>\n          <button onClick={() => changeLanguage(\"ko\")}>🇰🇷</button>\n          <button onClick={() => changeLanguage(\"en\")}>🇺🇸</button>\n          <button onClick={() => changeLanguage(\"vi\")}>🇻🇳</button>\n        </div>\n      </div>\n\n\n      {babyData && (\n  <div\n    style={{\n      marginBottom: \"1rem\",\n      padding: \"1rem\",\n      backgroundColor: \"#e3f2fd\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n    }}\n  >\n    <h3>👶 {t(\"babyInfo\")}</h3>\n    <p><strong>{t(\"name\")}:</strong> {babyData.name}</p>\n    <p><strong>{t(\"birthDate\")}:</strong> {babyData.birthdate}</p>\n  </div>\n)}\n\n\n\n      <div style={{ display: \"flex\", gap: \"1rem\", marginBottom: \"1rem\" }}>\n        <button onClick={() => handleTabChange(\"input\")} style={{ backgroundColor: activeTab === \"input\" ? \"#0070f3\" : \"#ccc\", color: \"#fff\", padding: \"8px 16px\", borderRadius: \"6px\" }}>\n          📌 {t(\"inputRecord\")}\n        </button>\n        <button onClick={() => handleTabChange(\"output\")} style={{ backgroundColor: activeTab === \"output\" ? \"#0070f3\" : \"#ccc\", color: \"#fff\", padding: \"8px 16px\", borderRadius: \"6px\" }}>\n          📌 {t(\"outputRecord\")}\n        </button>\n      </div>\n\n      {activeTab === \"input\" && (\n  <div>\n    <h2 className=\"text-xl font-semibold mb-4\">📌 {t(\"inputRecord\")}</h2>\n    \n    <div className=\"bg-gray-100 p-4 rounded-lg max-w-md space-y-4 shadow-md\">\n      \n      {/* 날짜 선택 */}\n      <div className=\"flex flex-col\">\n        <label className=\"mb-1 font-medium\">{t(\"date\")}</label>\n        <DatePicker \n          selected={selectedDate} \n          onChange={(date) => setSelectedDate(date!)} \n          dateFormat=\"yyyy-MM-dd\" \n          locale={ko} \n          className=\"border rounded p-2\"\n        />\n      </div>\n\n      {/* 시간 선택 */}\n      <div className=\"flex flex-col\">\n        <label className=\"mb-1 font-medium\">{t(\"time\")}</label>\n        <div className=\"flex gap-2\">\n          <select \n            value={selectedHour} \n            onChange={(e) => setSelectedHour(Number(e.target.value))} \n            className=\"border rounded p-2 w-1/2\"\n          >\n            {hours.map((h) => (\n              <option key={h} value={h}>{String(h).padStart(2, \"0\")}시</option>\n            ))}\n          </select>\n          <select \n            value={selectedMinute} \n            onChange={(e) => setSelectedMinute(Number(e.target.value))} \n            className=\"border rounded p-2 w-1/2\"\n          >\n            {minutes.map((m) => (\n              <option key={m} value={m}>{String(m).padStart(2, \"0\")}분</option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* 타입 선택 */}\n      <div className=\"flex flex-col\">\n        <label className=\"mb-1 font-medium\">{t(\"type\")}</label>\n        <select \n          value={selectedType} \n          onChange={(e) => setSelectedType(e.target.value)} \n          className=\"border rounded p-2\"\n        >\n          <option value=\"분유\">🍼 {t(\"formulaMilk\")}</option>\n          <option value=\"모유\">🤱 {t(\"breastMilk\")}</option>\n        </select>\n      </div>\n\n      {/* 수량 or 시간 입력 */}\n      {(selectedType === \"분유\" || selectedType === \"모유\") && (\n        <div className=\"flex flex-col\">\n          <label className=\"mb-1 font-medium\">\n            {selectedType === \"분유\" ? t(\"amountMl\") : t(\"durationMin\")}\n          </label>\n          <input \n            type=\"number\" \n            value={amount} \n            onChange={(e) => setAmount(e.target.value)} \n            className=\"border rounded p-2\"\n            min=\"0\"\n          />\n        </div>\n      )}\n\n      {/* 저장 버튼 */}\n      <button \n        onClick={handleSave}\n        className=\"bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded transition duration-150\"\n      >\n        💾 {t(\"save\")}\n      </button>\n\n      {/* 저장 메시지 */}\n      {saveMessage && <p className=\"text-green-600\">{saveMessage}</p>}\n    </div>\n  </div>\n)}\n\n\n      {activeTab === \"output\" && (\n        <div>\n          <h2>📌 {t(\"outputRecord\")}</h2>\n          <DatePicker selected={selectedDate} onChange={(date) => setSelectedDate(date!)} dateFormat=\"yyyy-MM-dd\" locale={ko} />\n\n          <ul className=\"mt-4 w-full overflow-x-auto\">\n  <li className=\"grid grid-cols-[1fr_2fr_auto] gap-2 bg-gray-200 p-2 rounded-t\">\n    <span className=\"font-medium\">{t(\"time\")}</span>\n    <span className=\"font-medium\">{t(\"detail\")}</span>\n    <span className=\"font-medium\">{t(\"actions\")}</span>\n  </li>\n  {records\n    .filter((r) => r.date === format(selectedDate, \"yyyy-MM-dd\"))\n    .sort((a, b) => a.hour * 60 + a.minute - (b.hour * 60 + b.minute))\n    .map((record) => {\n      const timeLabel = `${String(record.hour).padStart(2, \"0\")}:${String(record.minute).padStart(2, \"0\")}`;\n      const valueLabel =\n        record.type === \"분유\"\n          ? `${record.value}ml`\n          : record.type === \"모유\"\n          ? `${record.value}분`\n          : record.value;\n\n      return (\n        <li\n          key={record.id}\n          className=\"grid grid-cols-[1fr_2fr_auto] gap-2 items-center bg-white p-2 border-b last:border-none\"\n        >\n          {/* 시간 컬럼 */}\n          <span className=\"text-gray-700\">{timeLabel}</span>\n\n          {/* 종류 + 값 컬럼 */}\n          <span className=\"flex items-center gap-2\">\n            {record.type === \"분유\" ? \"🍼\" : \"🤱\"}{\" \"}\n            <strong className=\"text-indigo-600\">{t(record.type === \"분유\" ? \"formulaMilk\" : \"breastMilk\")}</strong>{\" \"}\n            — <span className=\"text-gray-800\">{valueLabel}</span>\n          </span>\n\n          {/* 액션 버튼 컬럼 */}\n          <div className=\"flex gap-2\">\n            <button\n              onClick={() => {\n                const newValue = prompt(t(\"editPrompt\"), String(record.value));\n                if (newValue !== null) handleEdit(record.id, newValue);\n              }}\n              className=\"text-sm px-2 py-1 bg-blue-500 hover:bg-blue-600 text-white rounded transition\"\n            >\n              ✏️ {t(\"edit\")}\n            </button>\n            <button\n              onClick={() => handleDelete(record.id)}\n              className=\"text-sm px-2 py-1 bg-red-500 hover:bg-red-600 text-white rounded transition\"\n            >\n              🗑️ {t(\"delete\")}\n            </button>\n          </div>\n        </li>\n      );\n    })}\n</ul>\n  \n\n          <h3>📊 {t(\"weeklySummary\")}</h3>\n          <ul>\n            {days.map((day) => {\n              const { milkTotal, breastTime, totalMilk } = getSummary(day);\n              return (\n                <li key={format(day, \"yyyy-MM-dd\")}>\n                  {format(day, \"M/d (E)\", { locale: ko })}: 🍼 {milkTotal}ml + 🤱 {breastTime}분 = {totalMilk}ml\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}